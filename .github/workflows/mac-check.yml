name: MacOS check

on:
  push:
    branches: [ "bk_omp" ]
  workflow_dispatch:
  
permissions: 
  contents: read

jobs:
  cran-check:
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false 
      matrix:
        include: [
          {os: "macos-latest", r: "release", compiler_version: 15},
          {os: "macos-latest", r: "release", compiler_version: 14},
        ]
    runs-on: ${{matrix.os}}
    name: ${{ matrix.os }}_${{ matrix.r}}_${{matrix.compiler_version}}
    steps:
      - uses: actions/checkout@v4
      - uses: r-lib/actions/setup-r@v2
        with:
            r-version: ${{matrix.r}}
      - uses: awalsh128/cache-apt-pkgs-action@latest
        if: runner.os == 'Linux'
        with:
          packages: | 
            cmake cmake-data gsl dh-elpa-helper libcmark-gfm-extensions0.29.0.gfm.3 
            libcmark-gfm0.29.0.gfm.3 libcurl4-openssl-dev libjsoncpp25 librhash0 
            pandoc pandoc-data texlive-latex-base texlive-latex-recommended 
            texlive-fonts-recommended
          version: 1.0
      - name: Restore R package cache (Linux)
        if: runner.os == 'Linux'
        id: cache-packages
        uses: actions/cache@v4
        with:
          key: r-${{ hashFiles('DESCRIPTION') }}
          path: ${{ env.R_LIBS_USER }}
      - name: Install GSL (macOS)
        if: runner.os == 'macOs'
        run: |
          brew install gsl openssl
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck, any::roxygen2
          needs: check
      - name: Install mac-r-tools
        if: runner.os == 'macOs'
        run: |
          install.packages("remotes")
          remotes::install_github("coatless-mac/macrtools")
          macrtools::macos_rtools_install()
        shell: Rscript {0}
      - name: Build and Check ToxicR
        if: runner.os == 'Linux'
        run: |
          R CMD build .
          r_output=$(R CMD build .)
          echo "$r_output"
          package_name=$(echo "$r_output" | sed -n "s/.*building ‘\([^’]*\.tar\.gz\)’.*/\1/p") 
          echo "$package_name"
          R CMD check --as-cran --no-manual $package_name
        shell: bash
        working-directory: "."
      - name: Build and Check ToxicR (MacOs)
        if: runner.os == 'macOs'
        run: |
          R CMD build .
          r_output=$(R CMD build .)
          echo "$r_output"
          package_name=$(echo "$r_output" | sed -n "s/.*building ‘\([^’]*\.tar\.gz\)’.*/\1/p") 
          echo "$package_name"
          R CMD check --as-cran --no-manual $package_name
        shell: bash
        working-directory: "."