# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.

name: Release New version

on:
  push: 
    tags: 
    - '*'
  workflow_dispatch: 

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
        - name: Create release
          id: create_release
          uses: ncipollo/release-action@v1
          with:
            allowUpdates: true
  build_upload_artefacts:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    strategy: 
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest, r: 'release'}
          - {os: macos-latest, r: 'release'}
        #   - {os: windows-latest, r: '4.2'}
        #   - {os: ubuntu-latest, r: '4.2'}
        #   - {os: macos-latest, r: '4.2'}
    env: 
        R_KEEP_PKG_SOURCE: yes
    steps:
      # see this for details: https://msmith.de/2020/03/12/r-cmd-check-github-actions.html
      - name: Configure git
        run: git config --global core.autocrlf false
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-tinytex@v2
      - uses: r-lib/actions/setup-r@v2
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache-version: 2
          extra-packages: |
            any::ggplot2
            any::rcmdcheck
            any::roxygen2
          needs: |
            check
            roxygen2
      - name: Read VERSION file
        id: getversion
        run: |
          VERSION=$(cat DESCRIPTION | grep -Po '(?<=Version\:\s).*' )
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      - name: Install gsl (Mac)
        if: runner.os == 'macOS'
        run: |
          brew install gsl
      - name: Build package (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: R CMD build --no-build-vignettes .
      - name: Build package
        if: runner.os == 'Linux' || runner.os == 'macOs' 
        run: R CMD build --no-build-vignettes .
      - name: Test Install  (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: R CMD INSTALL --build ToxicR_${{ steps.getversion.outputs.VERSION }}.tar.gz
      - name: Test Install
        if: runner.os == 'Linux' || runner.os == 'macOs'
        run: R CMD INSTALL --build ToxicR_${{ steps.getversion.outputs.VERSION }}.tar.gz
      - uses: svenstaro/upload-release-action@v2
        if: runner.os == 'macOs'
        with:
            tag: ${{ github.ref }}
            file: ToxicR_${{ steps.getversion.outputs.VERSION }}.tgz
            asset_name: "ToxicR_${{ steps.getversion.outputs.VERSION }}-x86_64-macOs-R.${{ matrix.config.r }}.tgz"
      - uses: svenstaro/upload-release-action@v2
        if: runner.os == 'Linux'
        with:
            tag: ${{ github.ref }}
            file: "ToxicR_${{ steps.getversion.outputs.VERSION }}_R_x86_64-pc-linux-gnu.tar.gz"
            asset_name: ToxicR_${{ steps.getversion.outputs.VERSION }}-x86_64-linux-R.${{ matrix.config.r }}.zip
      - uses: svenstaro/upload-release-action@v2
        if: runner.os == 'Windows'
        with:
            tag: ${{ github.ref }}
            file: ToxicR_${{ steps.getversion.outputs.VERSION }}.zip
            asset_name: ToxicR_${{ steps.getversion.outputs.VERSION }}-windows-R.${{ matrix.config.r }}.zip
        